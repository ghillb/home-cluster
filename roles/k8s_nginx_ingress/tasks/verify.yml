---
- name: Create Hello World webapp
  kubernetes.core.k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app: web
        name: web
        namespace: ingress-nginx
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: web
        template:
          metadata:
            labels:
              app: web
          spec:
            containers:
            - image: gcr.io/google-samples/hello-app:1.0
              name: hello-app

- name: Create Hello World webapp service
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: web
        name: web
        namespace: ingress-nginx
      spec:
        ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
        selector:
          app: web

- name: Create Hello World webapp ingress
  kubernetes.core.k8s:
    definition:
      apiVersion: networking.k8s.io/v1beta1
      kind: Ingress
      metadata:
        name: web
        namespace: ingress-nginx
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /$1
      spec:
        rules:
        - host: hello-world.{{ cluster_subdomain }}
          http:
            paths:
            - path: /
              backend:
                serviceName: web
                servicePort: 8080

- name: Wait for a valid response from Hello World ingress
  uri:
    url: http://{{ lb_ip }}
    method: GET
    headers:
      Host: hello-world.example.org
    return_content: yes
  register: hello_world_result
  until: hello_world_result.status == 200
  retries: 10
  delay: 6
  vars:
    lb_ip: '{{ ingress_nginx_svc.resources.0.status.loadBalancer.ingress.0.ip }}'

- debug: var=hello_world_result

- name: Clean up Hello World app
  kubernetes.core.k8s:
    api_version: '{{ item.api_version }}'
    kind: '{{ item.kind }}'
    name: web
    namespace: ingress-nginx
    state: absent
  loop:
    - api_version: apps/v1
      kind: Deployment
    - api_version: v1
      kind: Service
    - api_version: networking.k8s.io/v1beta1
      kind: Ingress
